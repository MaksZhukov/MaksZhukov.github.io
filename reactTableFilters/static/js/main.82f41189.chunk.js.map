{"version":3,"sources":["constants/index.js","components/Filters.jsx","actionTypes/index.js","actions/index.js","containers/Filters.js","components/Tables.jsx","containers/Tables.js","components/Panel.jsx","containers/Panel.js","components/App.jsx","selectors/index.js","containers/App.js","reducers/index.js","store.js","index.js"],"names":["TYPE_SEARCH","ORDER_CELLS","OFFSETS_FILTERS","Filters","handleChangeContext","values","_this$props","_this","props","changeContexts","id","contexts","handleChangeDimensions","_this$props2","changeDimensions","dimensions","handleChangeCell","_ref","target","_this$props3","changeCells","cell","value","handleChangeCellAll","_this$props4","changeCellsAll","handleInputSearch","_ref2","_this$props5","inputSearch","stopDraggableFilters","event","stopPropagation","handleChangeSearchType","_this$props6","changeSearchType","type","handleChangeOrderCells","_this$props7","changeOrderCells","_this$props8","this","getTables","responseGetTables","status","_this2","_this$props9","filters","react_default","a","createElement","Fragment","className","Multiselect_default","get","toJS","data","onChange","lib_default","onMouseDown","onInput","getIn","DropdownList_default","defaultValue","onClick","filter","size","rc_checkbox_es","checked","map","key","PureComponent","GET_TABLES","defineAction","addPanel","createAction","removePanel","getTablesSuccess","SUCCESS","getTablesError","ERROR","getTablesPending","PENDING","toggleFilters","changePositionPanels","connect","state","find","panel","dispatch","Object","asyncToGenerator","regenerator_default","mark","_callee","tables","wrap","_context","prev","next","pending","fetch","then","response","json","sent","message","t0","stop","_x","apply","arguments","_ref3","_ref4","_ref5","_ref6","Filter","Tables","checkedAllCells","length","table","concat","name","dimension","rows","row","rowKey","toString","keyCell","pan","cells","forEach","parents","context","selectedDimensions","selectedCells","cellsInTheDim","c","push","maxLength","Math","max","toConsumableArray","Array","fill","keyRow","Panel","startDragFilter","document","querySelectorAll","currentTarget","classList","remove","handleClickToggleFilters","handleClickRemovePanel","isOpenFilters","x","y","containers_Tables","react_portal_es","node","getElementById","react_draggable_default","defaultClassName","classNames","onStart","defaultPosition","containers_Filters","App","handleGridLayoutChange","positions","panels","react_grid_layout_default","cols","rowHeight","width","onLayoutChange","data-grid","w","h","containers_Panel","panelsSelector","createSelector","defaultState","fromJS","JSON","parse","localStorage","getItem","reducer","handleActions","_handleActions","defineProperty","newPanels","Date","getTime","floor","defaultContexts","defaultDimensions","orderCells","search","set","payload","setIn","List","keys","Map","newDefaultDimensions","newDimensions","newCells","keyTable","indexOf","keyDimension","cellValue","newCell","visible","_ref7","changeCell","index","updateIn","countAllChecked","countAllVisible","_ref8","_ref9","toLowerCase","_ref10","_ref11","sort","cell1","cell2","_ref12","update","_ref13","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","subscribe","setItem","stringify","getState","render","es","containers_App"],"mappings":"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","file":"static/js/main.82f41189.chunk.js","sourcesContent":["const SUB_ACTIONS_TYPES = ['SUCCESS', 'ERROR', 'PENDING'];\nconst TYPE_SEARCH = {\n  all: '**',\n  startWith: '*_',\n  exact: '\"\"',\n};\nconst ORDER_CELLS = {\n  up: 'A-Z',\n  down: 'Z-A',\n};\nconst OFFSETS_FILTERS = {\n  height: 300,\n  width: 400,\n  indentX: 110,\n  indentY: 100,\n  additionalIndentY: 10,\n\n};\nexport {\n  SUB_ACTIONS_TYPES,\n  TYPE_SEARCH,\n  ORDER_CELLS,\n  OFFSETS_FILTERS,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Multiselect from 'react-widgets/lib/Multiselect';\nimport DropdownList from 'react-widgets/lib/DropdownList';\nimport SearchInput from 'react-search-input';\nimport Checkbox from 'rc-checkbox';\nimport { Map } from 'immutable';\nimport { TYPE_SEARCH } from '../constants';\nimport 'rc-checkbox/assets/index.css';\n\nclass Filters extends PureComponent {\n  componentDidMount() {\n    const { getTables, id, responseGetTables } = this.props;\n    if (!responseGetTables.status || responseGetTables.status !== 'success') {\n      getTables(id);\n    }\n  }\n\n  handleChangeContext = (values) => {\n    const { changeContexts, id } = this.props;\n    changeContexts({ id, contexts: values });\n  }\n\n  handleChangeDimensions = (values) => {\n    const { changeDimensions, id } = this.props;\n    changeDimensions({ id, dimensions: values });\n  }\n\n  handleChangeCell = ({ target }) => {\n    const { changeCells, id } = this.props;\n    changeCells({ id, cell: target.value });\n  }\n\n  handleChangeCellAll = () => {\n    const { changeCellsAll, id } = this.props;\n    changeCellsAll(id);\n  }\n\n  handleInputSearch = ({ target }) => {\n    const { inputSearch, id } = this.props;\n    inputSearch({ id, value: target.value });\n  }\n\n  stopDraggableFilters = (event) => {\n    event.stopPropagation();\n  }\n\n  handleChangeSearchType = (value) => {\n    const { changeSearchType, id } = this.props;\n    changeSearchType({ id, type: value });\n  }\n\n  handleChangeOrderCells = () => {\n    const { changeOrderCells, id } = this.props;\n    changeOrderCells(id);\n  }\n\n  render() {\n    const { filters, id } = this.props;\n    return (\n      <>\n        <div className=\"filters-header\">\n          Filters for №\n          {' '}\n          {id}\n        </div>\n        <div className=\"filters-body\">\n          CONTEXTS\n          <div className=\"filters-context\">\n            <Multiselect\n              value={filters.get('contexts').toJS()}\n              data={filters.get('defaultContexts').toJS()}\n              onChange={this.handleChangeContext}\n            />\n          </div>\n          DIMENSIONS\n          <div className=\"filters-dimensions\">\n            <Multiselect\n              value={filters.get('dimensions').toJS()}\n              data={filters.get('defaultDimensions').toJS()}\n              onChange={this.handleChangeDimensions}\n            />\n          </div>\n          SEARCH\n          <div className=\"filters-search\">\n            <SearchInput onMouseDown={this.stopDraggableFilters} onInput={this.handleInputSearch} value={filters.getIn(['search', 'value'])} className=\"search-input\" />\n            <div className=\"filters-search-type\">\n              <DropdownList\n                defaultValue={filters.getIn(['search', 'type'])}\n                data={[\n                  TYPE_SEARCH.all,\n                  TYPE_SEARCH.startWith,\n                  TYPE_SEARCH.exact,\n                ]}\n                onChange={this.handleChangeSearchType}\n              />\n            </div>\n            <button type=\"button\" onClick={this.handleChangeOrderCells}>\n              {filters.get('orderCells')}\n            </button>\n          </div>\n          CELLS\n          <div className=\"filters-cells\">\n            {filters.get('cells').filter(cell => cell.get('visible')).size > 0\n              && (\n              <div className=\"filters-cells-all\">\n                <label>\n                  <Checkbox checked={filters.get('checkedAllCells')} onChange={this.handleChangeCellAll} />\n                  &nbsp; All\n                </label>\n              </div>\n              )\n            }\n            {filters.get('cells').filter(cell => cell.get('visible')).map(cell => (\n              <div key={cell} className=\"filters-cells-cell\">\n                <label>\n                  <Checkbox value={cell} checked={cell.get('checked')} onChange={this.handleChangeCell} />\n                  &nbsp;\n                  {cell.get('value')}\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nFilters.propTypes = {\n  id: PropTypes.number.isRequired,\n  filters: PropTypes.instanceOf(Map).isRequired,\n  responseGetTables: PropTypes.instanceOf(Map).isRequired,\n  getTables: PropTypes.func.isRequired,\n  changeContexts: PropTypes.func.isRequired,\n  changeDimensions: PropTypes.func.isRequired,\n  changeCells: PropTypes.func.isRequired,\n  changeCellsAll: PropTypes.func.isRequired,\n  inputSearch: PropTypes.func.isRequired,\n  changeSearchType: PropTypes.func.isRequired,\n  changeOrderCells: PropTypes.func.isRequired,\n};\n\nexport default Filters;\n","import { defineAction } from 'redux-define';\nimport { SUB_ACTIONS_TYPES } from '../constants';\n\nconst GET_TABLES = defineAction('GET_TABLES', SUB_ACTIONS_TYPES);\nexport {\n  GET_TABLES,\n};\n","import { createAction } from 'redux-actions';\nimport { GET_TABLES } from '../actionTypes';\n\nexport const addPanel = createAction('ADD_PANEL');\nexport const removePanel = createAction('REMOVE_PANEL');\nexport const getTablesSuccess = createAction(GET_TABLES.SUCCESS);\nexport const getTablesError = createAction(GET_TABLES.ERROR);\nexport const getTablesPending = createAction(GET_TABLES.PENDING);\nexport const getTables = id => async (dispatch) => {\n  try {\n    dispatch(getTablesPending({ id, responseGetTables: { pending: true } }));\n    const tables = await fetch('/data.json').then(response => response.json()).then(data => data);\n    dispatch(getTablesSuccess({\n      id,\n      responseGetTables: {\n        pending: false, status: 'success', tables, message: 'Get tables was success',\n      },\n    }));\n  } catch (err) {\n    dispatch(getTablesError({ id, responseGetTables: { pending: false, status: 'error', message: 'Get tables was error' } }));\n  }\n};\nexport const changeContexts = createAction('CHANGE_CONTEXTS');\nexport const changeDimensions = createAction('CHANGE_DIMENSIONS');\nexport const changeCells = createAction('CHANGE_CELLS');\nexport const changeCellsAll = createAction('CHANGE_CELLS_ALL');\nexport const inputSearch = createAction('INPUT_SEARCH');\nexport const changeSearchType = createAction('CHANGE_SEARCH_TYPE');\nexport const changeOrderCells = createAction('CHANGE_ORDER_CELLS');\nexport const toggleFilters = createAction('TOGGLE_FILTERS');\nexport const changePositionPanels = createAction('CHANGE_POSITION_PANELS');\n","import {\n  connect,\n} from 'react-redux';\nimport Filter from '../components/Filters';\nimport {\n  getTables, changeContexts, changeDimensions,\n  changeCells, changeCellsAll, inputSearch, changeOrderCells,\n  changeSearchType,\n} from '../actions';\n\n\nconst mapStateToProps = (state, { id }) => ({\n  filters: state.get('panels').find(panel => panel.get('id') === id).get('filters'),\n  responseGetTables: state.get('panels').find(panel => panel.get('id') === id).get('responseGetTables'),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getTables: id => dispatch(getTables(id)),\n  changeContexts: ({ id, contexts }) => dispatch(changeContexts({ id, contexts })),\n  changeDimensions: ({ id, dimensions }) => dispatch(changeDimensions({ id, dimensions })),\n  changeCells: ({ id, cell }) => dispatch(changeCells({ id, cell })),\n  changeCellsAll: id => dispatch(changeCellsAll(id)),\n  inputSearch: ({ id, value }) => dispatch(inputSearch({ id, value })),\n  changeSearchType: ({ id, type }) => dispatch(changeSearchType({ id, type })),\n  changeOrderCells: id => dispatch(changeOrderCells(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport 'rc-checkbox/assets/index.css';\n\nclass Tables extends PureComponent {\n  render() {\n    const { tables, checkedAllCells, id } = this.props;\n    return (\n      <div className=\"tables\">\n        {tables.length >= 0 && !checkedAllCells\n          && tables.map(table => (\n            <table key={`panel-${id}-table-${table}`} className=\"table\">\n              <caption className=\"table-caption\">\n                {table.name}\n              </caption>\n              <thead>\n                <tr>\n                  {table.dimensions.map(dimension => (\n                    <th key={dimension}>\n                      {dimension}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {table.rows.map((row, rowKey) => (\n                  <tr key={rowKey.toString()}>\n                    {row.map((cell, keyCell) => (\n                      <td key={keyCell.toString()}>\n                        {cell && cell.value}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nTables.propTypes = {\n  tables: PropTypes.instanceOf(Array).isRequired,\n  checkedAllCells: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default Tables;\n","import { connect } from 'react-redux';\nimport Tables from '../components/Tables';\n\nconst mapStateToProps = (state, {\n  id,\n}) => {\n  const panel = state.get('panels').find(pan => pan.get('id') === id);\n  const cells = panel.getIn(['filters', 'cells']).filter(cell => cell.get('checked')).toJS();\n  const contexts = panel.getIn(['filters', 'contexts']).toJS();\n  const dimensions = panel.getIn(['filters', 'dimensions']).toJS();\n  const checkedAllCells = panel.getIn(['filters', 'checkedAllCells']);\n  const tables = [];\n  contexts.forEach((table) => {\n    if (cells.filter(cell => cell.parents.context === table).length !== 0) {\n      const selectedDimensions = [];\n      const selectedCells = [];\n      dimensions.forEach((dimension) => {\n        const cellsInTheDim = cells.filter(c => c.parents.dimension === dimension\n          && c.parents.context === table);\n        if (cellsInTheDim.length !== 0) {\n          selectedDimensions.push(dimension);\n          selectedCells.push(cellsInTheDim);\n        }\n      });\n      const maxLength = Math.max(...selectedCells.map(cell => cell.length));\n      const rows = Array(maxLength).fill(null).map(() => []);\n      rows.forEach((row, keyRow) => {\n        selectedCells.forEach((cell, keyCell) => {\n          row.push(selectedCells[keyCell][keyRow]);\n        });\n      });\n      tables.push({\n        name: table,\n        dimensions: selectedDimensions,\n        rows,\n      });\n    }\n  });\n  return { tables, checkedAllCells };\n};\n\nexport default connect(mapStateToProps)(Tables);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Draggable from 'react-draggable';\nimport { Portal } from 'react-portal';\nimport FilterContainer from '../containers/Filters';\nimport Tables from '../containers/Tables';\nimport { OFFSETS_FILTERS } from '../constants';\n\nclass Panel extends PureComponent {\n  startDragFilter = (event) => {\n    document.querySelectorAll('.filters').forEach((filter) => {\n      if (filter !== event.currentTarget) {\n        filter.classList.remove('has-draggable');\n      }\n    });\n    event.stopPropagation();\n  }\n\n  handleClickToggleFilters = () => {\n    const { toggleFilters, id } = this.props;\n    toggleFilters(id);\n  }\n\n  handleClickRemovePanel = () => {\n    const { removePanel, id } = this.props;\n    removePanel(id);\n  }\n\n  render() {\n    const {\n      isOpenFilters, id, x, y,\n    } = this.props;\n\n    return (\n      <>\n        <div className=\"panel\">\n          <button type=\"button\" className=\"btn btn-filter\" onClick={this.handleClickToggleFilters}>\n            filter\n          </button>\n          <button type=\"button\" className=\"btn\" onClick={this.handleClickRemovePanel}>\n            x\n          </button>\n          <span>\n            №\n            {' '}\n            {id}\n          </span>\n          <Tables id={id} />\n          {isOpenFilters\n            && (\n              <Portal node={document && document.getElementById('portal-filters')}>\n                <Draggable\n                  defaultClassName={classNames('react-draggable', 'has-draggable')}\n                  onStart={this.startDragFilter}\n                  defaultPosition={{\n                    x: x * OFFSETS_FILTERS.width + OFFSETS_FILTERS.indentX,\n                    y: y * OFFSETS_FILTERS.height + OFFSETS_FILTERS.indentY\n                    + +(y > 0 ? OFFSETS_FILTERS.additionalIndentY : 0),\n                  }}\n                >\n                  <div className=\"filters\">\n                    <FilterContainer id={id} />\n                  </div>\n                </Draggable>\n              </Portal>\n            )\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nPanel.propTypes = {\n  id: PropTypes.number.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  toggleFilters: PropTypes.func.isRequired,\n  isOpenFilters: PropTypes.bool.isRequired,\n  removePanel: PropTypes.func.isRequired,\n};\n\nexport default Panel;\n","import { connect } from 'react-redux';\nimport Panel from '../components/Panel';\nimport { toggleFilters, removePanel } from '../actions';\n\n\nconst mapStateToProps = (state, { id }) => ({\n  isOpenFilters: state.get('panels').find(panel => panel.get('id') === id).get('isOpenFilters'),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleFilters: id => dispatch(toggleFilters(id)),\n  removePanel: id => dispatch(removePanel(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Panel);\n","import React, { PureComponent } from 'react';\nimport GridLayout from 'react-grid-layout';\nimport PropTypes from 'prop-types';\nimport PanelContainer from '../containers/Panel';\n\nclass App extends PureComponent {\n  handleGridLayoutChange = (positions) => {\n    const { changePositionPanels } = this.props;\n    changePositionPanels(positions);\n  }\n\n  render() {\n    const { panels, addPanel } = this.props;\n    return (\n    <>\n      <button type=\"button\" className=\"btn\" onClick={addPanel}>\n        +\n      </button>\n      <GridLayout className=\"panels\" cols={4} rowHeight={300} width={1600} onLayoutChange={this.handleGridLayoutChange}>\n        {panels.map(panel => (\n          <div\n            key={panel.get('id')}\n            data-grid={{\n              x: panel.get('x'), y: panel.get('y'), w: 1, h: 1,\n            }}\n          >\n            <PanelContainer x={panel.get('x')} y={panel.get('y')} id={panel.get('id')} />\n          </div>\n        ))}\n      </GridLayout>\n    </>);\n  }\n}\n\nApp.propTypes = {\n  panels: PropTypes.objectOf(PropTypes.any).isRequired,\n  addPanel: PropTypes.func.isRequired,\n  changePositionPanels: PropTypes.func.isRequired,\n};\n\nexport default App;\n","import { createSelector } from 'reselect';\n\n\nconst getPanels = state => state.get('panels');\n\nexport const panelsSelector = createSelector(getPanels, panels => panels);\n","import { connect } from 'react-redux';\nimport App from '../components/App';\nimport { addPanel, changePositionPanels } from '../actions';\nimport { panelsSelector } from '../selectors';\n\nconst mapStateToProps = state => ({ panels: panelsSelector(state) });\n\nconst mapDispatchToProps = dispatch => ({\n  addPanel: () => dispatch(addPanel()),\n  changePositionPanels: positions => dispatch(changePositionPanels(positions)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { handleActions } from 'redux-actions';\nimport { fromJS, List, Map } from 'immutable';\nimport {\n  addPanel,\n  removePanel,\n  getTablesSuccess,\n  getTablesError,\n  getTablesPending,\n  changeContexts,\n  changeDimensions,\n  changeCells,\n  changeCellsAll,\n  inputSearch,\n  changeOrderCells,\n  toggleFilters,\n  changeSearchType,\n  changePositionPanels,\n} from '../actions';\n\nimport {\n  TYPE_SEARCH,\n  ORDER_CELLS,\n} from '../constants';\n\n\nconst defaultState = fromJS(JSON.parse(localStorage.getItem('store'))) || fromJS({\n  panels: [],\n});\nconst reducer = handleActions({\n  [addPanel](state) {\n    const panels = state.get('panels');\n    const newPanels = panels.push(fromJS({\n      id: new Date().getTime(),\n      x: panels.size > 0 ? panels.size % 4 : 0,\n      y: panels.size > 0 ? Math.floor(panels.size / 4) : 0,\n      isOpenFilters: false,\n      filters: {\n        defaultContexts: [],\n        contexts: [],\n        defaultDimensions: [],\n        dimensions: [],\n        cells: [],\n        checkedAllCells: false,\n        orderCells: ORDER_CELLS.up,\n        search: {\n          value: '',\n          type: TYPE_SEARCH.all,\n        },\n      },\n      responseGetTables: {},\n    }));\n    return state.set('panels', newPanels);\n  },\n  [removePanel](state, { payload: id }) {\n    return state.set('panels', state.get('panels').filter(panel => panel.get('id') !== id));\n  },\n  [getTablesSuccess](state, { payload }) {\n    const { id, responseGetTables } = payload;\n    const panels = state.get('panels').map((panel) => {\n      if (panel.get('id') === id) {\n        const { tables } = responseGetTables;\n        return panel.setIn(['filters', 'defaultContexts'], List(Object.keys(tables)))\n          .set('responseGetTables', fromJS(responseGetTables));\n      }\n      return panel;\n    });\n    return state.set('panels', panels);\n  },\n  [getTablesError](state, { payload }) {\n    const { responseGetTables, id } = payload;\n    const panels = state.get('panels').map((panel) => {\n      if (panel.get('id') === id) {\n        return panel.set('responseGetTables', responseGetTables);\n      }\n      return panel;\n    });\n    return state.set('panels', panels);\n  },\n  [getTablesPending](state, { payload }) {\n    const { responseGetTables, id } = payload;\n    const panels = state.get('panels').map((panel) => {\n      if (panel.get('id') === id) {\n        return panel.set('responseGetTables', Map(responseGetTables));\n      }\n      return panel;\n    });\n    return state.set('panels', panels);\n  },\n  [changeContexts](state, { payload }) {\n    const { contexts, id } = payload;\n    const panels = state.get('panels').map((panel) => {\n      if (panel.get('id') === id) {\n        const tables = panel.getIn(['responseGetTables', 'tables']);\n        const dimensions = panel.getIn(['filters', 'dimensions']);\n        const cells = panel.getIn(['filters', 'cells']);\n        const newDefaultDimensions = [];\n        const newDimensions = [];\n        let newCells = [];\n        tables.forEach((table, keyTable) => {\n          if (contexts.indexOf(keyTable) !== -1) {\n            table.forEach((dimension, keyDimension) => {\n              if (dimensions.indexOf(keyDimension) !== -1) {\n                newDimensions.push(keyDimension);\n              }\n              newDefaultDimensions.push(keyDimension);\n            });\n            newCells = [...newCells, ...cells.filter(cell => cell.getIn(['parents', 'context']) === keyTable)];\n          }\n        });\n        return panel.setIn(['filters', 'contexts'], List(contexts))\n          .setIn(['filters', 'defaultDimensions'], List(newDefaultDimensions))\n          .setIn(['filters', 'dimensions'], List(newDimensions))\n          .setIn(['filters', 'cells'], fromJS(newCells));\n      }\n      return panel;\n    });\n    return state.set('panels', panels);\n  },\n  [changeDimensions](state, { payload }) {\n    const { dimensions, id } = payload;\n    const panels = state.get('panels').map((panel) => {\n      if (panel.get('id') === id) {\n        const tables = panel.getIn(['responseGetTables', 'tables']);\n        const cells = panel.getIn(['filters', 'cells']);\n        const newCells = [];\n        tables.forEach((table, keyTable) => {\n          table.forEach((dimension, keyDimension) => {\n            if (dimensions.indexOf(keyDimension) !== -1) {\n              dimension.forEach((cellValue) => {\n                if (cells.size !== 0) {\n                  const newCell = cells.find(cell => cell.get('value') === cellValue\n                  && cell.getIn(['parents', 'context']) === keyTable && cell.getIn(['parents', 'dimension']) === keyDimension);\n                  if (newCell) {\n                    newCells.push(newCell);\n                  } else {\n                    newCells.push({\n                      parents: { dimension: keyDimension, context: keyTable },\n                      checked: false,\n                      visible: true,\n                      value: cellValue,\n                    });\n                  }\n                } else {\n                  newCells.push({\n                    parents: { dimension: keyDimension, context: keyTable },\n                    checked: false,\n                    visible: true,\n                    value: cellValue,\n                  });\n                }\n              });\n            }\n          });\n        });\n        return panel.setIn(['filters', 'dimensions'], List(dimensions))\n          .setIn(['filters', 'cells'], fromJS(newCells));\n      }\n      return panel;\n    });\n    return state.set('panels', panels);\n  },\n  [changeCells](state, { payload }) {\n    const { cell: changeCell, id } = payload;\n    const panels = state.get('panels').map((panel) => {\n      if (panel.get('id') === id) {\n        const index = panel.getIn(['filters', 'cells']).indexOf(changeCell);\n        return panel.updateIn(['filters', 'cells', index], cell => cell.set('checked', !cell.get('checked')))\n          .updateIn(['filters', 'checkedAllCells'], () => {\n            const countAllChecked = panel.getIn(['filters', 'cells']).filter(cell => cell.get('visible') && cell.get('checked')).size;\n            const countAllVisible = panel.getIn(['filters', 'cells']).filter(cell => cell.get('visible')).size;\n            const currentChecked = changeCell.get('checked') === false && changeCell.get('visible') === true ? 1 : -1;\n            return countAllChecked + currentChecked === countAllVisible;\n          });\n      }\n      return panel;\n    });\n    return state.set('panels', panels);\n  },\n  [changeCellsAll](state, { payload: id }) {\n    const panels = state.get('panels').map((panel) => {\n      if (panel.get('id') === id) {\n        if (panel.getIn(['filters', 'checkedAllCells'])) {\n          return panel.updateIn(['filters', 'cells'],\n            cells => cells.map(cell => (cell.get('visible') === true ? cell.set('checked', false) : cell)))\n            .updateIn(['filters', 'checkedAllCells'], checked => !checked);\n        }\n        return panel.updateIn(['filters', 'cells'],\n          cells => cells.map(cell => (cell.get('visible') === true ? cell.set('checked', true) : cell)))\n          .updateIn(['filters', 'checkedAllCells'], checked => !checked);\n      }\n      return panel;\n    });\n    return state.set('panels', panels);\n  },\n  [inputSearch](state, { payload }) {\n    const { value, id } = payload;\n    const panels = state.get('panels').map((panel) => {\n      if (panel.get('id') === id) {\n        const type = panel.getIn(['filters', 'search', 'type']);\n        if (type === TYPE_SEARCH.all) {\n          return panel.updateIn(['filters', 'cells'],\n            cells => cells.map(cell => (cell.get('value').toLowerCase().indexOf(value.toLowerCase()) === -1\n              ? cell.set('visible', false) : cell.set('visible', true))))\n            .updateIn(['filters', 'search', 'value'], () => value);\n        }\n        if (type === TYPE_SEARCH.exact) {\n          return panel.updateIn(['filters', 'cells'],\n            cells => cells.map(cell => (value !== '' && cell.get('value').toLowerCase() !== value.toLowerCase()\n              ? cell.set('visible', false) : cell.set('visible', true))))\n            .updateIn(['filters', 'search', 'value'], () => value);\n        }\n        if (type === TYPE_SEARCH.startWith) {\n          return panel.updateIn(['filters', 'cells'],\n            cells => cells.map(cell => (cell.get('value').toLowerCase().indexOf(value.toLowerCase()) !== 0\n              ? cell.set('visible', false) : cell.set('visible', true))))\n            .updateIn(['filters', 'search', 'value'], () => value);\n        }\n      }\n      return panel;\n    });\n    return state.set('panels', panels);\n  },\n  [changeSearchType](state, { payload }) {\n    const { type, id } = payload;\n    const panels = state.get('panels').map((panel) => {\n      if (panel.get('id') === id) {\n        return panel.updateIn(['filters', 'search', 'type'], () => type);\n      }\n      return panel;\n    });\n    return state.set('panels', panels);\n  },\n  [changeOrderCells](state, { payload }) {\n    const panels = state.get('panels').map((panel) => {\n      if (panel.get('id') === payload) {\n        if (panel.getIn(['filters', 'orderCells']) === ORDER_CELLS.up) {\n          return panel.updateIn(['filters', 'cells'], cells => cells.sort((cell1, cell2) => {\n            if (cell1.get('value') > cell2.get('value')) {\n              return 1;\n            }\n            if (cell1.get('value') < cell2.get('value')) {\n              return -1;\n            }\n            return 0;\n          }))\n            .updateIn(['filters', 'orderCells'], () => ORDER_CELLS.down);\n        }\n        if (panel.getIn(['filters', 'orderCells']) === ORDER_CELLS.down) {\n          return panel.updateIn(['filters', 'cells'], cells => cells.sort((cell1, cell2) => {\n            if (cell1.get('value') > cell2.get('value')) {\n              return -1;\n            }\n            if (cell1.get('value') < cell2.get('value')) {\n              return 1;\n            }\n            return 0;\n          }))\n            .updateIn(['filters', 'orderCells'], () => ORDER_CELLS.up);\n        }\n      }\n      return panel;\n    });\n    return state.set('panels', panels);\n  },\n  [toggleFilters](state, { payload: id }) {\n    const panels = state.get('panels').map((panel) => {\n      if (panel.get('id') === id) {\n        return panel.update('isOpenFilters', isOpenFilters => !isOpenFilters);\n      }\n      return panel;\n    });\n    return state.set('panels', panels);\n  },\n  [changePositionPanels](state, { payload: positions }) {\n    const panels = state.get('panels').map((panel, key) => {\n      if (panel.get('x') !== positions[key].x || panel.get('y') !== positions[key].y) {\n        return panel.set('x', positions[key].x).set('y', positions[key].y);\n      }\n      return panel;\n    });\n    return state.set('panels', panels);\n  },\n},\ndefaultState);\n\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nstore.subscribe(() => localStorage.setItem('store', JSON.stringify(store.getState())));\n\nexport default store;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppContainer from './containers/App';\nimport store from './store';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport './index.css';\n\n\nrender(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>, document.getElementById('root'),\n);\n"],"sourceRoot":""}